extends layout.pug

block content
    #map
    #leg_title
        span#leg_items Map Legend
    #leg
        each layer, i in jmap
            input(id=layer.name)(type='checkbox', checked)
            span#leg_items #{layer.name}
            br
    script(type='text/javascript').

        var corner1 = L.latLng(0, 0);
        var corner2 = L.latLng(600, 600)
        var bounds = L.latLngBounds(corner1, corner2);

        var map = L.map('map', {
            crs: L.CRS.Simple,
            minZoom: 1.0,
            maxZoom: 4.5,
            zoomDelta: 0.1,
            zoomSnap: 0.1,
            wheelPxPerZoomLevel: 1000,
            maxBounds: bounds,
            maxBoundsViscosity: 0.5,
            center: [300, 300]
        });

        var bounds = [[0,0], [600,600]];
        var image = L.imageOverlay('Ignus_Map.jpg', bounds).addTo(map);
        map.fitBounds(bounds);

        var sol = L.latLng([ 300, 300 ]);
        L.marker(sol).addTo(map);

        $.getJSON('/maplayers',function(result){
            $.each(result, function(i, mlayer){
                //alert(mlayer.name);
                //addLayer(L.mapbox.featureLayer().loadURL('/mapjson/' + mlayer.name), mlayer.name);
                $.getJSON('/mapjson/' + mlayer.name, function(data) { addLayer(data, mlayer.name ) });
            });
        });

        function addLayer(layer, name) {
            var leaf_layer;
            if (layer.type == "MultiPoint") {
                leaf_layer = L.geoJson(layer, { pointToLayer: function (feature, latlng) {return L.circleMarker(latlng, layer.style); }})
                leaf_layer.bindPopup(layer.type);
            } else if (layer.type == "MultiLineString") {
                leaf_layer = L.geoJson(layer, {style: layer.style, zIndex:999 });
                leaf_layer.bindPopup(layer.type);
            } else  {
                leaf_layer = L.geoJson(layer, {
                    style: function(feature) {
                        switch (feature.properties.style) {
                        case 'Orange': return {
                        fillColor: "#e9bc3b",
                        color: "#ac8613",
                        opacity: 1,
                        fillOpacity: 0.8
                        };
                        case 'Blue': return {
                        fillColor: "#0099ff",
                        color: "#005f9d",
                        opacity: 1,
                        fillOpacity: 0.8
                        };
                    }
                    },
                    onEachFeature: function (feature, layer) {
                         layer.bindPopup(feature.properties.name);
                     }
                 });
            }
            leaf_layer.addTo(map);

            $('#' + name).click(function(e) {

                if (map.hasLayer(leaf_layer)) {
                    map.removeLayer(leaf_layer);
                } else {
                    map.addLayer(leaf_layer);
                }
            });
        }
